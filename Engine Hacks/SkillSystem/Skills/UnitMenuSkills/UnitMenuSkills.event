
#include "Capture/Capture.event"

#include "StealPlus/StealPlus.event"

#include "HeroesMovement/HeroesMovement.event"

ALIGN 4
NewDanceUsability:
#incbin "Dance/NewDanceUsability.dmp"
POIN SkillTester
WORD DanceID
WORD ALSO_USE_VANILLA_DANCE_CHECK

ALIGN 4
NewSupplyUsability:
#incbin "Supply/NewSupplyUsability.dmp"
POIN SkillTester
WORD OverdriveID
WORD ALSO_USE_VANILLA_SUPPLY_CHECK

ALIGN 4
NewSummonUsability:
#incbin "Summon/NewSummonUsability.dmp"
POIN SkillTester
WORD SummonID
WORD ALSO_USE_VANILLA_SUMMON_CHECK

ALIGN 4
AttackEffect:
#incbin "Attack/AttackEffect.dmp"

ALIGN 4
LungeUsability:
#incbin "Lunge/LungeUsability.dmp"
POIN SkillTester
WORD LungeID

ALIGN 4
LungeEffect:
#incbin "Lunge/LungeEffect.dmp"

ALIGN 4
GambleUsability:
#incbin "Gamble/GambleUsability.dmp"
POIN SkillTester
WORD GambleID

ALIGN 4
GambleEffect:
#incbin "Gamble/GambleEffect.dmp"

ALIGN 4
MercyUsability:
#incbin "Mercy/MercyUsability.dmp"
POIN SkillTester
WORD DefeatistID

ALIGN 4
MercyEffect:
#incbin "Mercy/MercyEffect.dmp"

ALIGN 4 //thanks retinaaaa
DemolishEffect:
#incbin "Demolish/FlowEffect.dmp"
POIN DemolishEvent

DemolishEvent:
EVBIT_MODIFY 0x4
CHECK_ALIVE 0x3F //sentry
BNE 0x776 0x0 0xC //play alternate event and don't end turn if sentry is dead
Text(TurretAlt)
GOTO 0x9001

LABEL 0x776

TEXTSTART
TEXTSHOW TurretTalk
TEXTEND
REMA
SVAL 0x7 0x1
BNE 0x9000 0xC 0x7
SOUN 0xF1
EVBIT_MODIFY 0x0
DISA_IF 0x3F
GOTO 0x9001
LABEL 0x9000
EVBIT_MODIFY 0x0
LABEL 0x9001
EVBIT_T 0x7
ENDA

ALIGN 4
DemolishUsability:
#incbin "Demolish/FlowUsability.dmp"
POIN SkillTester
WORD ElbowGreaseID

ALIGN 4 //thanks retinaaaa
AmmoEffect:
#incbin "Ammo/AmmoEffect.dmp"
POIN AmmoEvent

AmmoEvent:
EVBIT_MODIFY 0x4
CHECK_ALIVE 0x3F //sentry
BNE 0x776 0x0 0xC //play alternate event and don't end turn if sentry is dead
Text(TurretAlt)
GOTO 0x9001

LABEL 0x776

//ASMC 0xB88571 //clear items
STAL 0x10
SOUN 0x2f4
STAL 0x15

SOUN 0xB1
STAL 0x5
BYTE 0x40 0x0D 0x3F 0x44; POIN SilentGiveItem+1

SOUN 0xB1
STAL 0x5
BYTE 0x40 0x0D 0x3F 0x44; POIN SilentGiveItem+1

SOUN 0xB1
STAL 0x5
BYTE 0x40 0x0D 0x3F 0x44; POIN SilentGiveItem+1

SOUN 0xB1
STAL 0x5
BYTE 0x40 0x0D 0x3F 0x44; POIN SilentGiveItem+1

SOUN 0xB1
STAL 0x5
BYTE 0x40 0x0D 0x3F 0x44; POIN SilentGiveItem+1

STAL 0x15
SOUN 0x2D7

LABEL 0x9001
EVBIT_T 0x7
ENDA

ALIGN 4
AmmoUsability:
#incbin "Ammo/AmmoUsability.dmp"
POIN AuraSkillCheck
WORD ShootTwiceID

ALIGN 4
UnflowUsability: //don't ask
#incbin "Flow/FlowUsability.dmp"
POIN SkillTester
WORD FlowStateID
ALIGN 4
FlowUsability:
#incbin "Flow/UnflowUsability.dmp"
POIN SkillTester
WORD FlowStateID

ALIGN 4
FlowCombat:
#incbin "Flow/FlowInBattle.dmp"
POIN SkillTester
WORD FlowStateID

ALIGN 4
FlowEffect:
#incbin "Flow/FlowEffect.dmp"
POIN FlowEvent
ALIGN 4
UnflowEffect:
#incbin "Flow/UnflowEffect.dmp"
POIN UnflowEvent

FlowEvent:
ENUT 0x22
SOUN 0x122
//SOUN 0x3b5
STAL 0x5
NoFade
ENDA

UnflowEvent:
ENUF 0x22
SOUN 0x313
STAL 0x5
NoFade
ENDA

ALIGN 4
StealthEffect:
#incbin "Stealth/StealthEffect.dmp"
POIN StealthEvent

ALIGN 4
StealthCombat:
#incbin "Stealth/StealthInBattle.dmp"
POIN SkillTester
WORD StealthID

ALIGN 4
StealthUsability:
#incbin "Stealth/StealthUsability.dmp"
POIN SkillTester
WORD StealthID

StealthEvent:
SOUN 0xDD
ENUT 0x25
STAL 0x5
NoFade
ENDA

ALIGN 4
HeadshotUsability:
#incbin "Headshot/HeadshotUsability.dmp"
POIN SkillTester
WORD SureShotID

ALIGN 4
HeadshotEffect: //sets the flag
#incbin "Headshot/HeadshotEffect.dmp"
POIN HeadshotEvent

ALIGN 4
HeadshotPostBattle: //unsets the flag post combat if flag is set
#incbin "Headshot/HeadshotPostBattle.dmp"
POIN SkillTester
WORD SureShotID
POIN HeadshotUnsetFlagEvent

HeadshotEvent:
ENUT 0x94
SOUN 0xd1
STAL 0x32
SOUN 0xf0
STAL 0x8
NoFade
ENDA

HeadshotUnsetFlagEvent:
ENUF 0x94
SOUN 0x2cf
STAL 0x5
NoFade
ENDA


#include "CombatArts/CombatArts.event"

