#ifndef MODULAR_GETTER_RESISTANCE_EVENT
#define MODULAR_GETTER_RESISTANCE_EVENT

#include "_Common.event"

pResistanceModifiers: // Resistance
	POIN prAddUnitResistance prHalveIfCapturing prDebuffRes prAddEquipResistance prItemPassiveResistance prRallyRes prAddPureWaterBarrierMod prLifeAndDeathMinus prSkillFury prFortressResistanceRes prStatusZephyrEnemyCheckRes prHostileLoyalty prDefiantRes prPushRes
	POIN prMinZero
	POIN prSleepHalfRes prPoisonHalfRes
//	POIN prAvoidBuffRes
	POIN prAcrobatCheckRes
	POIN prCantoRingRes prBulwarkRingRes prGrimRingRes prUlrichRingRes
	//POIN prPaleRingRes prAshenRingRes
//	POIN prTemperedFateRes
	POIN prFlorisMarkedRes
	POIN prFlowStateCheckRes
	POIN prNullifyIfMageRing //sets res to 0
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	#endif
WORD 0

prAddUnitResistance:
	rAdd(rSByteAt(UNIT_RESISTANCE))

prAddEquipResistance:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemResBonus)))

prAddPureWaterBarrierMod: // Upper part of byte 0x31 in unit struct is current pure water/barrier bonus duration
	rAdd(rUpperHalfByteOf(rUByteAt(0x31)))

prDebuffRes:
	#include "_asm/DebuffRes.lyn.event"
	POIN GetDebuffs|1

prRallyRes:
	#include "_asm/RallyRes.lyn.event"
	POIN GetDebuffs|1
	
prSleepHalfRes:
rIfUnitHasStatus(0x2)
	rHalved
	
prPoisonHalfRes:
rIfUnitHasStatus(0x1)
	rHalved
	
prAvoidBuffRes:
rIfUnitHasStatus(0x8)
	rAddConst(3)
	
prTemperedFateRes:
rIfUnitHasStatus(0x13)
	rAddConst(50)
	
prFlorisMarkedRes:
	rIfUnitHasStatus(SickStatusID)
		rAddConst(5)
	
prAcrobatCheckRes:
rIfUnitHasNotSkill(SanctuaryID)
		rIfUnitHasSkill(AcrobatID)
			rSubConst(5)
			
prCantoRingRes:
rIfUnitHasNotSkill(SanctuaryID)
	rIfUnitHasSkill(CantoOneID)
		rSubConst(4)
		
prGrimRingRes:
rIfUnitHasNotSkill(SanctuaryID)
	rIfUnitHasSkill(GrimRingID)
		rSubConst(4)
		
prPaleRingRes:
	rIfUnitHasSkill(GlowRingID)
		rAddConst(5)
		
prUlrichRingRes:
	rIfUnitHasSkill(KeepsakeID)
		rAddConst(10)
		
prAshenRingRes:
	rIfUnitHasSkill(AshenRingID)
		rAddConst(5)
		
prBulwarkRingRes:
rIfUnitHasSkill(BattleVeteranID)
		rAddConst(7)
		
prFlowStateCheckRes:
	rIfUnitHasSkill(FlowStateID)
  rIf(CheckMyFlag)
    rHalved
CheckMyFlag:
  rForConstant(0x22)
    // CheckEventId
    rCallExternal(0x8083da8)
			
prNullifyIfMageRing:
	rIfUnitHasSkill(TomeRangeUpID)
		rConstant(0)
		
prStatusZephyrEnemyCheckRes:
	rIfUnitHasStatus(0xB)
			rConstant(0)

prLifeAndDeathMinus:
_testSkill(HeroesLifeAndDeathID,0,5)

prFortressResistanceRes:
	_testSkill(FortressResistanceID,5,0)

prItemPassiveResistance:
#ifndef DONT_STACK_BOOSTS
	rPassiveStatBoostsStacking(STAT_RESISTANCE)
#else // DONT_STACK_BOOSTS
	rPassiveStatBoostsNonStacking(STAT_RESISTANCE)
#endif // DONT_STACK_BOOSTS

#endif // MODULAR_GETTER_RESISTANCE_EVENT
