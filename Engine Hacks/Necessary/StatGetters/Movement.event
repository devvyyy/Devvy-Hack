#ifndef MODULAR_GETTER_MOVEMENT_EVENT
#define MODULAR_GETTER_MOVEMENT_EVENT

#include "_Common.event"
ALIGN 4
pMovModifiers: // Movement
	POIN prAddUnitBaseMov prAddUnitMovBonus (prGetItemMovBonus-1) prItemPassiveMov prRallyMov prSkillCelerity prSkillUpgrade prArmorMarchCheck prStatusZephyrCheck prStatusZephyrEnemyCheck
	#ifdef STAIRS_ASM
	POIN StairsMoveDebuff-1
	#endif
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	#endif
//	POIN prMoonCheck
	POIN prTuskedHornMove prAddMoreIfArmor prAddLessIfMounted
	POIN prGaleforceCheck
//	POIN prPassCheck
	POIN prSavingGraceCheck
//	POIN prEmpowerCheck prStaticCheck prGalestormCheck
	POIN prCantoRing
	POIN prFlowStateCheck
	//POIN prFlorisMarked
	POIN prStatusOverdriveMovCheck
	POIN prAvoidBuffMove
	POIN prNullifyIfRooted
	POIN prNullifyIfGuardAI
WORD 0

prAddUnitBaseMov: // byte 0x12 in ROM class data is base class movement
	rAdd(rForWordAt(UNIT_ROMCLASS, rSByteAt(0x12))) 

prAddUnitMovBonus:
	rAdd(rSByteAt(UNIT_MOV_BONUS))

prSkillCelerity:
	rIfUnitHasSkill(CelerityID)
		rAddConst(2)
		
prSkillUpgrade:
	rIfUnitHasSkill(UpgradeID)
		rAddConst(1)

prNullifyIfGuardAI:
	rIfUnitHasNotAllegience(UA_BLUE)
		rIfUnitHasGuardAI
			rConstant(0)
			
prSavingGraceCheck:
rIfUnitHasSkill(SavingGraceID)
	rIfUnitHasState(US_RESCUING)
		rAddConst(2)

prNullifyIfRooted:
	rIfUnitHasStatus(0x17)
		rConstant(0)
		
prAvoidBuffMove: //feared
rIfUnitHasStatus(0x8)
	rConstant(0)
		
prFlorisMarked:
rIfUnitHasNotSkill(ShootTwiceID)
	rIfUnitHasStatus(SickStatusID)
		rAddConst(1)
		
prCantoRing:
	rIfUnitHasSkill(CantoOneID)
		rAddConst(1)
		
prGaleforceCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(GaleforceID)
			rHalved
			
prStatusZephyrEnemyCheck:
	rIfUnitHasStatus(0x19)
		rIfUnitHasNotSkill(ZephyrID)
			rSubConst(4)
			
prStatusZephyrCheck:
	rIfUnitHasStatus(0x19)
		rIfUnitHasSkill(ZephyrID)
			rAddConst(4)
			
prFlowStateCheck:
	rIfUnitHasSkill(FlowStateID)
		rIfUnitHasState(0x10000000)
			rAddConst(2)
			
prPassCheck: //player thieves
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(PassID)
			rConstant(0)
			
prEmpowerCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(CharismaID)
			rConstant(0)
			
prStaticCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(StaticPanicID)
			rConstant(0)
			
prGalestormCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(GalestormID)
			rConstant(0)
			
prMoonCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(OverdriveID)
			rConstant(0)
			
//prSidestepCheck:
//	rIfUnitHasState(0x80000000)
//		rIfUnitHasSkill(CloseCallID)
//			rAddConst(2)
			
prStatusOverdriveMovCheck:
	rIfUnitHasStatus(0x15) //Overdrive
			rAddConst(2)
			
prTuskedHornMove:
rIfUnitHasStatus(0x5) //atk buff?
	rIfUnitHasNotAttribute(CA_FEMALE)
		rAddConst(3)

prAddMoreIfArmor:
rIfUnitHasStatus(0x5) //atk buff?
	rIfUnitHasNotAttribute(CA_FEMALE)
		rIfUnitHasAttribute(CA_WYVERN)
		rAddConst(2)
		
prAddLessIfMounted:
rIfUnitHasStatus(0x5) //atk buff?
	rIfUnitHasNotAttribute(CA_FEMALE)
		rIfUnitHasAttribute(CA_MOUNTEDAID)
			rSubConst(2)

prRallyMov:
	#include "_asm/RallyMov.lyn.event"
	POIN GetDebuffs|2

ALIGN 4
prAddEquipMov:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemMovBonus)))
	#include "_asm/GetItemMovBonus.lyn.event"

ALIGN 4
prItemPassiveMov:
#ifndef DONT_STACK_BOOSTS
	rPassiveStatBoostsStacking(STAT_MOV)
#else // DONT_STACK_BOOSTS
	rPassiveStatBoostsNonStacking(STAT_MOV)
#endif // DONT_STACK_BOOSTS

#endif // MODULAR_GETTER_MOVEMENT_EVENT
