#ifndef MODULAR_GETTER_MOVEMENT_EVENT
#define MODULAR_GETTER_MOVEMENT_EVENT

#include "_Common.event"
ALIGN 4
pMovModifiers: // Movement
	POIN prAddUnitBaseMov prAddUnitMovBonus (prGetItemMovBonus-1) prItemPassiveMov prRallyMov prSkillCelerity prSkillPoise prArmorMarchCheck prStatusZephyrCheck prStatusZephyrEnemyCheck
	#ifdef STAIRS_ASM
	POIN StairsMoveDebuff-1
	#endif
	POIN prNullifyIfRooted
	POIN prNullifyIfGuardAI
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	#endif
	POIN prMoonCheck
	POIN prGaleforceCheck
	POIN prPassCheck
	POIN prEmpowerCheck
	POIN prStatusOverdriveMovCheck
WORD 0

prAddUnitBaseMov: // byte 0x12 in ROM class data is base class movement
	rAdd(rForWordAt(UNIT_ROMCLASS, rSByteAt(0x12))) 

prAddUnitMovBonus:
	rAdd(rSByteAt(UNIT_MOV_BONUS))

prSkillCelerity:
	rIfUnitHasSkill(CelerityID)
		rAddConst(2)
		
prSkillPoise:
	rIfUnitHasSkill(UpgradeID)
		rAddConst(1)

prNullifyIfGuardAI:
	rIfUnitHasNotAllegience(UA_BLUE)
		rIfUnitHasGuardAI
			rConstant(0)

prNullifyIfRooted:
	rIfUnitHasStatus(0x10)
		rConstant(0)
		
prGaleforceCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(GaleforceID)
			rHalved
			
prStatusZephyrEnemyCheck:
	rIfUnitHasStatus(0x19)
		rIfUnitHasNotSkill(ZephyrID)
			rSubConst(4)
			
prStatusZephyrCheck:
	rIfUnitHasStatus(0x19)
		rIfUnitHasSkill(ZephyrID)
			rAddConst(4)
			
prPassCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(PassID)
			rConstant(0)
			
prEmpowerCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(CharismaID)
			rConstant(0)
			
prMoonCheck:
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(MoonEvokedID)
			rConstant(0)
			
prStatusOverdriveMovCheck:
	rIfUnitHasStatus(0x15) //Overdrive
			rAddConst(2)

prRallyMov:
	#include "_asm/RallyMov.lyn.event"
	POIN GetDebuffs|2

ALIGN 4
prAddEquipMov:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemMovBonus)))
	#include "_asm/GetItemMovBonus.lyn.event"

ALIGN 4
prItemPassiveMov:
#ifndef DONT_STACK_BOOSTS
	rPassiveStatBoostsStacking(STAT_MOV)
#else // DONT_STACK_BOOSTS
	rPassiveStatBoostsNonStacking(STAT_MOV)
#endif // DONT_STACK_BOOSTS

#endif // MODULAR_GETTER_MOVEMENT_EVENT
