#ifndef MODULAR_GETTER_POWER_EVENT
#define MODULAR_GETTER_POWER_EVENT

#include "_Common.event"

pPowerModifiers: // Power
	POIN prAddUnitPower prHalveIfCapturing prDebuffStr prAddEquipPower prItemPassivePow prRallyStr prLifeAndDeathBonus prSkillFury prFortressDefensePow VigorDanceCheck prFortressResistancePow prResolve prHostileLoyalty prDefiantStr prPushStr
	POIN prDesperation prCounter prBulwarkRingAtk prTuskedHorn prAddMoreIfWreyvian
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	#endif
	POIN prEmpowerEthCheck
	POIN prCritBuffAtk
WORD 0

prAddUnitPower:
	rAdd(rSByteAt(UNIT_POWER))
	
prAddEquipPower:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemPowBonus)))

prDebuffStr:
	#include "_asm/DebuffStr.lyn.event"
	POIN GetDebuffs|1

prRallyStr:
	#include "_asm/RallyStr.lyn.event"
	POIN GetDebuffs|1

prLifeAndDeathBonus:
	_testSkill(HeroesLifeAndDeathID,5,0)

prSkillFury:
  rIfUnitHasSkill(FuryID)
    rAddConst(2)
	
prCriticalForce:
rIfUnitHasNotSkill(SanctuaryID)
  rIfUnitHasSkill(CriticalForceID)
    rSubConst(2)
	
prCounter:
rIfUnitHasNotSkill(SanctuaryID)
  rIfUnitHasSkill(CounterID)
    rSubConst(4)
	
prDesperation:
rIfUnitHasNotSkill(SanctuaryID)
  rIfUnitHasSkill(DesperationID)
    rSubConst(3)

prBulwarkRingAtk:
rIfUnitHasNotSkill(SanctuaryID)
  rIfUnitHasSkill(BattleVeteranID)
    rSubConst(5)
	
prEmpowerEthCheck: //thief rush
	rIfUnitHasState(0x400)
		rIfUnitHasSkill(CharismaID)
			rAddConst(5)
			
prTuskedHorn:
rIfUnitHasStatus(0x5) //atk buff?
	rAddConst(3)

prAddMoreIfWreyvian:
rIfUnitHasStatus(0x5) //atk buff?
	rIfUnitHasNotAttribute(CA_FEMALE)
		rAddConst(2)
			
prCritBuffAtk:
	rIfUnitHasStatus(0x7)
		rAddConst(3)

prFortressDefensePow:
	_testSkill(FortressDefenseID,0,3)

prFortressResistancePow:
	_testSkill(FortressResistanceID,0,3)

prItemPassivePow:
#ifndef DONT_STACK_BOOSTS
	rPassiveStatBoostsStacking(STAT_POWER)
#else // DONT_STACK_BOOSTS
	rPassiveStatBoostsNonStacking(STAT_POWER)
#endif // DONT_STACK_BOOSTS

#endif // MODULAR_GETTER_POWER_EVENT
